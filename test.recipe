def $state 27;
def @returns;
def @callStack;
def @heap;
def @antiHeap;
@heap.push 84;
@heap.push 72;
@heap.push 82;
@heap.push 69;
@heap.push 69;
@heap.push 84;
@heap.push 87;
@heap.push 79;
@heap.push 79;
@heap.push 78;
@heap.push 69;
@heap.push 71;
@heap.push 79;
def $heapSize 13;
def $lenp0t604037f783c42aee;
def $datap0tcb0b9b48e8b94a89;
def $arrp0tf7d53d9505ced117;
def $arrp1tf8f1a76b1fe6482a;
def $inputp0tbd6adece7744a01f;
def $otherp0t259c2b4cde646bb8;
def $otherp1t30fef28553082efe;
def $startp0t553b9c46902fe7a4;
def $sp0tbb3ba598679c5c7e;
def $sp1t9960565ad59e37c4;
def $ip0t428fcfecb92a2802;
def $jp0t3495659552a7fb3e;
def $inputp0td398f3e925800b0d;
def $inputp1t19bda28960e48a58;
def $startIndexp0tde8a5fbeda46101;
def $threep0t47fc73c4e5c7f6b7;
def $twop0t169930f303461834;
def $onep0ta9168ab12cdc0464;
def $gop0tc0e0b3c5b3c2eb99;
@returns.push 0;
while $state {
  push $state;
  eq 1;
  if {
    def $indexp0t4055569a3d7041d8;
    def $sp0tf71bd1aae270ec0c;
    def $sp1t57ea8fdb3b8bd181;
    def $ptrp0te2c1556e420bfb43;
    def $offsetp0td887bc8432a27e8;
    def $ptrp0tc2e0b3e442c5750a;
    pop $indexp0t4055569a3d7041d8;
    pop $sp1t57ea8fdb3b8bd181;
    pop $sp0tf71bd1aae270ec0c;
    push $sp0tf71bd1aae270ec0c;
    push $indexp0t4055569a3d7041d8;
    pop $offsetp0td887bc8432a27e8;
    pop $ptrp0tc2e0b3e442c5750a;
    push $ptrp0tc2e0b3e442c5750a;
    add $offsetp0td887bc8432a27e8;
    pop $ptrp0te2c1556e420bfb43;
    push $ptrp0te2c1556e420bfb43;
    def $ptr;
    pop $ptr;
    def $tempDeref;
    push $heapSize;
    sub $ptr;
    del $ptr;
    def $moved;
    clone $moved;
    for {
    @heap.pop $tempDeref;
    @antiHeap.push $tempDeref;
    };
    @antiHeap.pop $tempDeref;
    push $tempDeref;
    @heap.push $tempDeref;
    push $moved;
    sub 1;
    for {
    @antiHeap.pop $tempDeref;
    @heap.push $tempDeref;
    };
    del $moved;
    del $tempDeref;
    del $offsetp0td887bc8432a27e8;
    del $ptrp0tc2e0b3e442c5750a;
    del $indexp0t4055569a3d7041d8;
    del $sp0tf71bd1aae270ec0c;
    del $sp1t57ea8fdb3b8bd181;
    del $ptrp0te2c1556e420bfb43;
    @returns.pop $state;
  };
  push $state;
  eq 2;
  if {
    def $np0tcf68fe04bd59ebec;
    def $amountp0t466e8734d3f9b409;
    def $ptrp0tf4487a5bf70c1ced;
    pop $np0tcf68fe04bd59ebec;
    push $np0tcf68fe04bd59ebec;
    mul 1;
    pop $amountp0t466e8734d3f9b409;
    push $heapSize;
    pop $ptrp0tf4487a5bf70c1ced;
    push $amountp0t466e8734d3f9b409;
    for {
        @heap.push 0;
        inc $heapSize;
    };
    push $ptrp0tf4487a5bf70c1ced;
    del $np0tcf68fe04bd59ebec;
    del $amountp0t466e8734d3f9b409;
    del $ptrp0tf4487a5bf70c1ced;
    @returns.pop $state;
  };
  push $state;
  eq 3;
  if {
    pop $lenp0t604037f783c42aee;
    push $lenp0t604037f783c42aee;
    @returns.push 4;
    push 2;
    pop $state;
  };
  push $state;
  eq 4;
  if {
    pop $datap0tcb0b9b48e8b94a89;
    push $datap0tcb0b9b48e8b94a89;
    push $lenp0t604037f783c42aee;
    @returns.pop $state;
  };
  push $state;
  eq 5;
  if {
    push 0;
    @returns.push 6;
    push 3;
    pop $state;
  };
  push $state;
  eq 6;
  if {
    pop $arrp1tf8f1a76b1fe6482a;
    pop $arrp0tf7d53d9505ced117;
    push 7;
    pop $state;
  };
  push $state;
  eq 7;
  if {
    push 1;
    def $cond;
    pop $cond;
    push $cond;
    mul 8;
    push 1;
    sub $cond;
    mul 10;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 8;
  if {
    def $ip0tc5de463a69c2a3ea;
    read $ip0tc5de463a69c2a3ea;
    push $ip0tc5de463a69c2a3ea;
    pop $inputp0tbd6adece7744a01f;
    not $inputp0tbd6adece7744a01f;
    del $ip0tc5de463a69c2a3ea;
    def $cond;
    pop $cond;
    push $cond;
    mul 9;
    push 1;
    sub $cond;
    mul 11;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 9;
  if {
    push 10;
    pop $state;
  };
  push $state;
  eq 10;
  if {
    push $arrp0tf7d53d9505ced117;
    push $arrp1tf8f1a76b1fe6482a;
    @returns.pop $state;
  };
  push $state;
  eq 11;
  if {
    push $inputp0tbd6adece7744a01f;
    gt 96;
    def $cond;
    pop $cond;
    push $cond;
    mul 12;
    push 1;
    sub $cond;
    mul 13;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 12;
  if {
    push $inputp0tbd6adece7744a01f;
    sub 32;
    pop $inputp0tbd6adece7744a01f;
    push 13;
    pop $state;
  };
  push $state;
  eq 13;
  if {
    @heap.push $inputp0tbd6adece7744a01f;
    inc $heapSize;
    push $arrp0tf7d53d9505ced117;
    push $arrp1tf8f1a76b1fe6482a;
    add 1;
    pop $arrp1tf8f1a76b1fe6482a;
    pop $arrp0tf7d53d9505ced117;
    push 7;
    pop $state;
  };
  push $state;
  eq 14;
  if {
    pop $otherp1t30fef28553082efe;
    pop $otherp0t259c2b4cde646bb8;
    pop $startp0t553b9c46902fe7a4;
    pop $sp1t9960565ad59e37c4;
    pop $sp0tbb3ba598679c5c7e;
    push $startp0t553b9c46902fe7a4;
    pop $ip0t428fcfecb92a2802;
    push 15;
    pop $state;
  };
  push $state;
  eq 15;
  if {
    push $ip0t428fcfecb92a2802;
    lt $sp1t9960565ad59e37c4;
    def $cond;
    pop $cond;
    push $cond;
    mul 16;
    push 1;
    sub $cond;
    mul 26;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 16;
  if {
    push 0;
    pop $jp0t3495659552a7fb3e;
    push 17;
    pop $state;
  };
  push $state;
  eq 17;
  if {
    push $jp0t3495659552a7fb3e;
    lt $otherp1t30fef28553082efe;
    def $cond;
    pop $cond;
    push $cond;
    mul 18;
    push 1;
    sub $cond;
    mul 22;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 18;
  if {
    push $sp0tbb3ba598679c5c7e;
    push $sp1t9960565ad59e37c4;
    push $ip0t428fcfecb92a2802;
    add $jp0t3495659552a7fb3e;
    @returns.push 19;
    push 1;
    pop $state;
  };
  push $state;
  eq 19;
  if {
    push $otherp0t259c2b4cde646bb8;
    push $otherp1t30fef28553082efe;
    push $jp0t3495659552a7fb3e;
    @returns.push 20;
    push 1;
    pop $state;
  };
  push $state;
  eq 20;
  if {
    eq { nop; };
    not { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 21;
    push 1;
    sub $cond;
    mul 25;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 21;
  if {
    push 22;
    pop $state;
  };
  push $state;
  eq 22;
  if {
    push $jp0t3495659552a7fb3e;
    eq $otherp1t30fef28553082efe;
    def $cond;
    pop $cond;
    push $cond;
    mul 23;
    push 1;
    sub $cond;
    mul 24;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 23;
  if {
    push $ip0t428fcfecb92a2802;
    @returns.pop $state;
  };
  push $state;
  eq 24;
  if {
    push $ip0t428fcfecb92a2802;
    add 1;
    pop $ip0t428fcfecb92a2802;
    push 15;
    pop $state;
  };
  push $state;
  eq 25;
  if {
    push $jp0t3495659552a7fb3e;
    add 1;
    pop $jp0t3495659552a7fb3e;
    push 17;
    pop $state;
  };
  push $state;
  eq 26;
  if {
    neg 1;
    @returns.pop $state;
  };
  push $state;
  eq 27;
  if {
    @returns.push 28;
    push 5;
    pop $state;
  };
  push $state;
  eq 28;
  if {
    pop $inputp1t19bda28960e48a58;
    pop $inputp0td398f3e925800b0d;
    push 0;
    pop $startIndexp0tde8a5fbeda46101;
    push $inputp0td398f3e925800b0d;
    push $inputp1t19bda28960e48a58;
    push $startIndexp0tde8a5fbeda46101;
    push 0;
    push 5;
    @returns.push 29;
    push 14;
    pop $state;
  };
  push $state;
  eq 29;
  if {
    pop $threep0t47fc73c4e5c7f6b7;
    push $threep0t47fc73c4e5c7f6b7;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 30;
    push 1;
    sub $cond;
    mul 31;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 30;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 31;
  if {
    push $threep0t47fc73c4e5c7f6b7;
    add 5;
    pop $startIndexp0tde8a5fbeda46101;
    push $inputp0td398f3e925800b0d;
    push $inputp1t19bda28960e48a58;
    push $startIndexp0tde8a5fbeda46101;
    push 5;
    push 3;
    @returns.push 32;
    push 14;
    pop $state;
  };
  push $state;
  eq 32;
  if {
    pop $twop0t169930f303461834;
    push $twop0t169930f303461834;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 33;
    push 1;
    sub $cond;
    mul 34;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 33;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 34;
  if {
    push $twop0t169930f303461834;
    add 3;
    pop $startIndexp0tde8a5fbeda46101;
    push $inputp0td398f3e925800b0d;
    push $inputp1t19bda28960e48a58;
    push $startIndexp0tde8a5fbeda46101;
    push 8;
    push 3;
    @returns.push 35;
    push 14;
    pop $state;
  };
  push $state;
  eq 35;
  if {
    pop $onep0ta9168ab12cdc0464;
    push $onep0ta9168ab12cdc0464;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 36;
    push 1;
    sub $cond;
    mul 37;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 36;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 37;
  if {
    push $onep0ta9168ab12cdc0464;
    add 3;
    pop $startIndexp0tde8a5fbeda46101;
    push $inputp0td398f3e925800b0d;
    push $inputp1t19bda28960e48a58;
    push $startIndexp0tde8a5fbeda46101;
    push 11;
    push 2;
    @returns.push 38;
    push 14;
    pop $state;
  };
  push $state;
  eq 38;
  if {
    pop $gop0tc0e0b3c5b3c2eb99;
    push $gop0tc0e0b3c5b3c2eb99;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 39;
    push 1;
    sub $cond;
    mul 40;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 39;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 40;
  if {
    def $ip0t775ebeb761ff6763;
    push $gop0tc0e0b3c5b3c2eb99;
    add 1;
    pop $ip0t775ebeb761ff6763;
    print $ip0t775ebeb761ff6763;
    flush;
    push 0;
    del $ip0t775ebeb761ff6763;
    @returns.pop $state;
  };
};
