def $state 18;
def @returns;
def @callStack;
def @heap;
def @antiHeap;
@heap.push 84;
@heap.push 72;
@heap.push 82;
@heap.push 69;
@heap.push 69;
@heap.push 84;
@heap.push 87;
@heap.push 79;
@heap.push 79;
@heap.push 78;
@heap.push 69;
@heap.push 71;
@heap.push 79;
def $heapSize 13;
def $lenp0t6099a865f35581a9;
def $datap0ta41e89b4a7897a1c;
def $otherp0t4dcdd97284340fec;
def $otherp1t2744ade2ef153e73;
def $startp0t3bb448c57eb8a317;
def $sp0te16a53b2c8c6079c;
def $sp1tf78ab70ddf4c6bd6;
def $ip0t9232211f0f3c367f;
def $jp0t71924529d2340bde;
def $inputp0t7b3a82cafbd8e88a;
def $inputp1t75d24dec4792020e;
def $arrp0t32959b4dd108b475;
def $arrp1t3030b8c340d8c849;
def $inputp0te03546174a5bde8d;
def $startIndexp0t36335bb51e198ded;
def $threep0t8f36dda5c83ce2a0;
def $twop0t448a13b1904f14e6;
def $onep0t2aa31d5d1caee6e0;
def $gop0t404876319746c731;
@returns.push 0;
while $state {

  push $state; eq 1; if {
    def $indexp0tf0a74383e98573a9;
    pop $indexp0tf0a74383e98573a9;
    def $sp1ta5e993de0aefa34f;
    pop $sp1ta5e993de0aefa34f;
    del $sp1ta5e993de0aefa34f;
    def $sp0tadbb9cd59656b68c;
    del $sp0tadbb9cd59656b68c;
    def $ptrp0t33d3e0ae9c9cc160;
    del $ptrp0t33d3e0ae9c9cc160;
    add $indexp0tf0a74383e98573a9;
    pop $indexp0tf0a74383e98573a9;
    push $heapSize;
    sub $indexp0tf0a74383e98573a9;
    pop $indexp0tf0a74383e98573a9;
    push $indexp0tf0a74383e98573a9;
    def $tempDeref;
    for {
    @heap.pop $tempDeref;
    @antiHeap.push $tempDeref;
    };
    @antiHeap.pop $tempDeref;
    push $tempDeref;
    @heap.push $tempDeref;
    push $indexp0tf0a74383e98573a9;
    del $indexp0tf0a74383e98573a9;
    sub 1;
    for {
    @antiHeap.pop $tempDeref;
    @heap.push $tempDeref;
    };
    del $tempDeref;
    @returns.pop $state;
  };
  
  
  push $state; eq 4; if {
    pop $datap0ta41e89b4a7897a1c;
    push $datap0ta41e89b4a7897a1c;
    push $lenp0t6099a865f35581a9;
    @returns.pop $state;
  };
  push $state; eq 5; if {
    pop $otherp1t2744ade2ef153e73;
    pop $otherp0t4dcdd97284340fec;
    pop $startp0t3bb448c57eb8a317;
    pop $sp1tf78ab70ddf4c6bd6;
    pop $sp0te16a53b2c8c6079c;
    push $startp0t3bb448c57eb8a317;
    pop $ip0t9232211f0f3c367f;
    push 6;//[inline]
    pop $state;
  };
  push $state; eq 6; if {
    push $ip0t9232211f0f3c367f;
    push $sp1tf78ab70ddf4c6bd6;
    def $TEMPt5a420a82d80f0b91;
    pop $TEMPt5a420a82d80f0b91;
    sub $TEMPt5a420a82d80f0b91;
    pop $TEMPt5a420a82d80f0b91;
    if $TEMPt5a420a82d80f0b91 {
    def @TEMPte34da27f1ab10e6d;
    @TEMPte34da27f1ab10e6d.push 0;
    @TEMPte34da27f1ab10e6d.sub 1;
    @TEMPte34da27f1ab10e6d.push 1;
    @TEMPte34da27f1ab10e6d.rot $TEMPt5a420a82d80f0b91;
    @TEMPte34da27f1ab10e6d.pop $null;
    @TEMPte34da27f1ab10e6d.pop $TEMPt5a420a82d80f0b91;
    undef @TEMPte34da27f1ab10e6d;
    };
    push $TEMPt5a420a82d80f0b91;
    del $TEMPt5a420a82d80f0b91;
    push 0;
    sub 1;
    def $TEMPt95c956226e196b5;
    pop $TEMPt95c956226e196b5;
    sub $TEMPt95c956226e196b5;
    pop $TEMPt95c956226e196b5;
    push 1;
    if $TEMPt95c956226e196b5 {
    pop $null;
    push 0;
    };
    pop $TEMPt95c956226e196b5;
    push 17;//[noinline]
    if $TEMPt95c956226e196b5 {
    pop;
    push 0;
    pop $jp0t71924529d2340bde;
    push 8;//[inline]
    };
    del $TEMPt95c956226e196b5;
    pop $state;
  };
  
  push $state; eq 8; if {
    push $jp0t71924529d2340bde;
    push $otherp1t2744ade2ef153e73;
    def $TEMPt40b1cae7ecb267dd;
    pop $TEMPt40b1cae7ecb267dd;
    sub $TEMPt40b1cae7ecb267dd;
    pop $TEMPt40b1cae7ecb267dd;
    if $TEMPt40b1cae7ecb267dd {
    def @TEMPt5f614dcc0be2189b;
    @TEMPt5f614dcc0be2189b.push 0;
    @TEMPt5f614dcc0be2189b.sub 1;
    @TEMPt5f614dcc0be2189b.push 1;
    @TEMPt5f614dcc0be2189b.rot $TEMPt40b1cae7ecb267dd;
    @TEMPt5f614dcc0be2189b.pop $null;
    @TEMPt5f614dcc0be2189b.pop $TEMPt40b1cae7ecb267dd;
    undef @TEMPt5f614dcc0be2189b;
    };
    push $TEMPt40b1cae7ecb267dd;
    del $TEMPt40b1cae7ecb267dd;
    push 0;
    sub 1;
    def $TEMPt8692b85436a793a7;
    pop $TEMPt8692b85436a793a7;
    sub $TEMPt8692b85436a793a7;
    pop $TEMPt8692b85436a793a7;
    push 1;
    if $TEMPt8692b85436a793a7 {
    pop $null;
    push 0;
    };
    pop $TEMPt8692b85436a793a7;
    push 13;//[noinline]
    if $TEMPt8692b85436a793a7 {
    pop;
    push $sp0te16a53b2c8c6079c;
    push $sp1tf78ab70ddf4c6bd6;
    push $ip0t9232211f0f3c367f;
    add $jp0t71924529d2340bde;
    @returns.push 10;
    push 1;//[inline]
    };
    del $TEMPt8692b85436a793a7;
    pop $state;
  };
  
  push $state; eq 10; if {
    push $otherp0t4dcdd97284340fec;
    push $otherp1t2744ade2ef153e73;
    push $jp0t71924529d2340bde;
    @returns.push 11;
    push 1;//[inline]
    pop $state;
  };
  push $state; eq 11; if {
    def $TEMPt437986757838793a;
    pop $TEMPt437986757838793a;
    sub $TEMPt437986757838793a;
    pop $TEMPt437986757838793a;
    push 0;
    if $TEMPt437986757838793a {
    pop $null;
    push 1;
    };
    pop $TEMPt437986757838793a;
    push 16;//[noinline]
    if $TEMPt437986757838793a {
    pop;
    push 13;//[inline]
    };
    del $TEMPt437986757838793a;
    pop $state;
  };
  
  push $state; eq 13; if {
    push $jp0t71924529d2340bde;
    push $otherp1t2744ade2ef153e73;
    def $TEMPt2be9eeccaf73eaa3;
    pop $TEMPt2be9eeccaf73eaa3;
    sub $TEMPt2be9eeccaf73eaa3;
    pop $TEMPt2be9eeccaf73eaa3;
    push 1;
    if $TEMPt2be9eeccaf73eaa3 {
    pop $null;
    push 0;
    };
    pop $TEMPt2be9eeccaf73eaa3;
    push 15;//[noinline]
    if $TEMPt2be9eeccaf73eaa3 {
    pop;
    push $ip0t9232211f0f3c367f;
    @returns.pop $state;push $state;};
    del $TEMPt2be9eeccaf73eaa3;
    pop $state;
  };
  
  push $state; eq 15; if {
    push $ip0t9232211f0f3c367f;
    add 1;
    pop $ip0t9232211f0f3c367f;
    push 6;//[inline]
    pop $state;
  };
  push $state; eq 16; if {
    push $jp0t71924529d2340bde;
    add 1;
    pop $jp0t71924529d2340bde;
    push 8;//[inline]
    pop $state;
  };
  push $state; eq 17; if {
    push 0;
    sub 1;
    @returns.pop $state;
  };
  push $state; eq 18; if {
    push 0;
    @returns.push 19;
    pop $lenp0t6099a865f35581a9;
    push $lenp0t6099a865f35581a9;
    @returns.push 4;
    mul 1;
    def $amountp0tf5bb9fe45c5c9f70;
    pop $amountp0tf5bb9fe45c5c9f70;
    push $heapSize;
    def $ptrp0tf1bdc548a349cdf;
    pop $ptrp0tf1bdc548a349cdf;
    push $amountp0tf5bb9fe45c5c9f70;
    for {
        @heap.push 0;
        inc $heapSize;
    };
    del $amountp0tf5bb9fe45c5c9f70;
    push $ptrp0tf1bdc548a349cdf;
    del $ptrp0tf1bdc548a349cdf;
    @returns.pop $state;push $state;pop $state;
  };
  push $state; eq 19; if {
    pop $arrp1t3030b8c340d8c849;
    pop $arrp0t32959b4dd108b475;
    push 20;//[inline]
    pop $state;
  };
  push $state; eq 20; if {
    def $ip0tb782698fb21430a8;
    read $ip0tb782698fb21430a8;
    push $ip0tb782698fb21430a8;
    del $ip0tb782698fb21430a8;
    pop $inputp0te03546174a5bde8d;
    push $inputp0te03546174a5bde8d;
    def $TEMPta61c75e8ba00f5fc;
    pop $TEMPta61c75e8ba00f5fc;
    push 1;
    if $TEMPta61c75e8ba00f5fc {
    pop $null;
    push 0;
    };
    pop $TEMPta61c75e8ba00f5fc;
    push 36;//[noinline]
    if $TEMPta61c75e8ba00f5fc {
    pop;
    push $arrp0t32959b4dd108b475;
    push $arrp1t3030b8c340d8c849;
    pop $inputp1t75d24dec4792020e;
    pop $inputp0t7b3a82cafbd8e88a;
    push 0;
    pop $startIndexp0t36335bb51e198ded;
    push $inputp0t7b3a82cafbd8e88a;
    push $inputp1t75d24dec4792020e;
    push $startIndexp0t36335bb51e198ded;
    push 0;
    push 5;
    @returns.push 24;
    push 5;//[inline]
    };
    del $TEMPta61c75e8ba00f5fc;
    pop $state;
  };
  
  
  
  push $state; eq 24; if {
    pop $threep0t8f36dda5c83ce2a0;
    push $threep0t8f36dda5c83ce2a0;
    def $TEMPt41fb622a1006a627;
    push 0;
    sub 1;
    pop $TEMPt41fb622a1006a627;
    sub $TEMPt41fb622a1006a627;
    pop $TEMPt41fb622a1006a627;
    push 1;
    if $TEMPt41fb622a1006a627 {
    pop $null;
    push 0;
    };
    pop $TEMPt41fb622a1006a627;
    push 26;//[noinline]
    if $TEMPt41fb622a1006a627 {
    pop;
    push 0;
    @returns.pop $state;push $state;};
    del $TEMPt41fb622a1006a627;
    pop $state;
  };
  
  push $state; eq 26; if {
    push $threep0t8f36dda5c83ce2a0;
    add 5;
    pop $startIndexp0t36335bb51e198ded;
    push $inputp0t7b3a82cafbd8e88a;
    push $inputp1t75d24dec4792020e;
    push $startIndexp0t36335bb51e198ded;
    push 5;
    push 3;
    @returns.push 27;
    push 5;//[inline]
    pop $state;
  };
  push $state; eq 27; if {
    pop $twop0t448a13b1904f14e6;
    push $twop0t448a13b1904f14e6;
    def $TEMPt5f8146985c7e587c;
    push 0;
    sub 1;
    pop $TEMPt5f8146985c7e587c;
    sub $TEMPt5f8146985c7e587c;
    pop $TEMPt5f8146985c7e587c;
    push 1;
    if $TEMPt5f8146985c7e587c {
    pop $null;
    push 0;
    };
    pop $TEMPt5f8146985c7e587c;
    push 29;//[noinline]
    if $TEMPt5f8146985c7e587c {
    pop;
    push 0;
    @returns.pop $state;push $state;};
    del $TEMPt5f8146985c7e587c;
    pop $state;
  };
  
  push $state; eq 29; if {
    push $twop0t448a13b1904f14e6;
    add 3;
    pop $startIndexp0t36335bb51e198ded;
    push $inputp0t7b3a82cafbd8e88a;
    push $inputp1t75d24dec4792020e;
    push $startIndexp0t36335bb51e198ded;
    push 8;
    push 3;
    @returns.push 30;
    push 5;//[inline]
    pop $state;
  };
  push $state; eq 30; if {
    pop $onep0t2aa31d5d1caee6e0;
    push $onep0t2aa31d5d1caee6e0;
    def $TEMPtd8a4d72bc4fe0b90;
    push 0;
    sub 1;
    pop $TEMPtd8a4d72bc4fe0b90;
    sub $TEMPtd8a4d72bc4fe0b90;
    pop $TEMPtd8a4d72bc4fe0b90;
    push 1;
    if $TEMPtd8a4d72bc4fe0b90 {
    pop $null;
    push 0;
    };
    pop $TEMPtd8a4d72bc4fe0b90;
    push 32;//[noinline]
    if $TEMPtd8a4d72bc4fe0b90 {
    pop;
    push 0;
    @returns.pop $state;push $state;};
    del $TEMPtd8a4d72bc4fe0b90;
    pop $state;
  };
  
  push $state; eq 32; if {
    push $onep0t2aa31d5d1caee6e0;
    add 3;
    pop $startIndexp0t36335bb51e198ded;
    push $inputp0t7b3a82cafbd8e88a;
    push $inputp1t75d24dec4792020e;
    push $startIndexp0t36335bb51e198ded;
    push 11;
    push 2;
    @returns.push 33;
    push 5;//[inline]
    pop $state;
  };
  push $state; eq 33; if {
    pop $gop0t404876319746c731;
    push $gop0t404876319746c731;
    def $TEMPt2a319e4091d8088b;
    push 0;
    sub 1;
    pop $TEMPt2a319e4091d8088b;
    sub $TEMPt2a319e4091d8088b;
    pop $TEMPt2a319e4091d8088b;
    push 1;
    if $TEMPt2a319e4091d8088b {
    pop $null;
    push 0;
    };
    pop $TEMPt2a319e4091d8088b;
    push 35;//[noinline]
    if $TEMPt2a319e4091d8088b {
    pop;
    push 0;
    @returns.pop $state;push $state;};
    del $TEMPt2a319e4091d8088b;
    pop $state;
  };
  
  push $state; eq 35; if {
    push $gop0t404876319746c731;
    add 1;
    def $ip0t3e34cdc0b9565121;
    pop $ip0t3e34cdc0b9565121;
    print $ip0t3e34cdc0b9565121;
    flush;
    del $ip0t3e34cdc0b9565121;
    push 0;
    @returns.pop $state;
  };
  push $state; eq 36; if {
    push $inputp0te03546174a5bde8d;
    def $TEMPt8a5c3047371fc34d;
    sub 96;
    pop $TEMPt8a5c3047371fc34d;
    if $TEMPt8a5c3047371fc34d {
    def @TEMPt9b56b20667b14738;
    @TEMPt9b56b20667b14738.push 0;
    @TEMPt9b56b20667b14738.sub 1;
    @TEMPt9b56b20667b14738.push 1;
    @TEMPt9b56b20667b14738.rot $TEMPt8a5c3047371fc34d;
    @TEMPt9b56b20667b14738.pop $null;
    @TEMPt9b56b20667b14738.pop $TEMPt8a5c3047371fc34d;
    undef @TEMPt9b56b20667b14738;
    };
    push $TEMPt8a5c3047371fc34d;
    del $TEMPt8a5c3047371fc34d;
    sub 1;
    def $TEMPt8408a670d4d0584a;
    pop $TEMPt8408a670d4d0584a;
    push 1;
    if $TEMPt8408a670d4d0584a {
    pop $null;
    push 0;
    };
    pop $TEMPt8408a670d4d0584a;
    push 38;//[noinline]
    if $TEMPt8408a670d4d0584a {
    pop;
    push $inputp0te03546174a5bde8d;
    sub 32;
    pop $inputp0te03546174a5bde8d;
    push 38;//[inline]
    };
    del $TEMPt8408a670d4d0584a;
    pop $state;
  };
  
  push $state; eq 38; if {
    @heap.push $inputp0te03546174a5bde8d;
    inc $heapSize;
    push $arrp0t32959b4dd108b475;
    push $arrp1t3030b8c340d8c849;
    add 1;
    pop $arrp1t3030b8c340d8c849;
    pop $arrp0t32959b4dd108b475;
    push 20;//[inline]
    pop $state;
  };
};