def $state 27;
def @returns;
def @callStack;
def @heap;
def @antiHeap;
@heap.push 84;
@heap.push 72;
@heap.push 82;
@heap.push 69;
@heap.push 69;
@heap.push 84;
@heap.push 87;
@heap.push 79;
@heap.push 79;
@heap.push 78;
@heap.push 69;
@heap.push 71;
@heap.push 79;
def $heapSize 13;
def $lenp0t238643a785ec0b8d;
def $datap0t63059aadb37d420;
def $arrp0t4e189db59a4b5ae7;
def $arrp1t960852b06b335f11;
def $inputp0t64c6aae285936e03;
def $otherp0taf8bf87179792208;
def $otherp1ta3b5d5ed1ff3575b;
def $startp0teced3b0606d386e7;
def $sp0t95986065824a3777;
def $sp1ta2b91c22340ba2f4;
def $ip0t7346e0f511b89c6e;
def $jp0t9a9b5d605f22583d;
def $inputp0t42c2021b54a09b03;
def $inputp1td6171b79184ac85b;
def $startIndexp0t8273183eb8f1e2fa;
def $threep0tbe8c3140eab95a14;
def $twop0t192b703ed2f8e303;
def $onep0t153d09583ebb53a5;
def $gop0tbca64ed48fb41d52;
@returns.push 0;
while $state {
  push $state;
  eq 1;
  if {
    def $indexp0td617f164eda4d9c9;
    def $sp0t3a61d71daff11af4;
    def $sp1t2f60f7399fb65b58;
    def $ptrp0tcaf517cea41ab942;
    def $offsetp0tef5d2b4bd3636f13;
    def $ptrp0td3787422877acfe7;
    pop $indexp0td617f164eda4d9c9;
    pop $sp1t2f60f7399fb65b58;
    pop $sp0t3a61d71daff11af4;
    push $sp0t3a61d71daff11af4;
    push $indexp0td617f164eda4d9c9;
    pop $offsetp0tef5d2b4bd3636f13;
    pop $ptrp0td3787422877acfe7;
    push $ptrp0td3787422877acfe7;
    add $offsetp0tef5d2b4bd3636f13;
    pop $ptrp0tcaf517cea41ab942;
    push $ptrp0tcaf517cea41ab942;
    def $ptr;
    pop $ptr;
    def $tempDeref;
    push $heapSize;
    sub $ptr;
    del $ptr;
    def $moved;
    clone $moved;
    for {
    @heap.pop $tempDeref;
    @antiHeap.push $tempDeref;
    };
    @antiHeap.pop $tempDeref;
    push $tempDeref;
    @heap.push $tempDeref;
    push $moved;
    sub 1;
    for {
    @antiHeap.pop $tempDeref;
    @heap.push $tempDeref;
    };
    del $moved;
    del $tempDeref;
    del $offsetp0tef5d2b4bd3636f13;
    del $ptrp0td3787422877acfe7;
    del $indexp0td617f164eda4d9c9;
    del $sp0t3a61d71daff11af4;
    del $sp1t2f60f7399fb65b58;
    del $ptrp0tcaf517cea41ab942;
    @returns.pop $state;
  };
  push $state;
  eq 2;
  if {
    def $np0t8a9282f502bcf668;
    def $amountp0tbd6da7936072b9cb;
    def $ptrp0t4afeb38ab30e8f27;
    pop $np0t8a9282f502bcf668;
    push $np0t8a9282f502bcf668;
    mul 1;
    pop $amountp0tbd6da7936072b9cb;
    push $heapSize;
    pop $ptrp0t4afeb38ab30e8f27;
    push $amountp0tbd6da7936072b9cb;
    for {
        @heap.push 0;
        inc $heapSize;
    };
    push $ptrp0t4afeb38ab30e8f27;
    del $np0t8a9282f502bcf668;
    del $amountp0tbd6da7936072b9cb;
    del $ptrp0t4afeb38ab30e8f27;
    @returns.pop $state;
  };
  push $state;
  eq 3;
  if {
    pop $lenp0t238643a785ec0b8d;
    push $lenp0t238643a785ec0b8d;
    @returns.push 4;
    push 2;
    pop $state;
  };
  push $state;
  eq 4;
  if {
    pop $datap0t63059aadb37d420;
    push $datap0t63059aadb37d420;
    push $lenp0t238643a785ec0b8d;
    @returns.pop $state;
  };
  push $state;
  eq 5;
  if {
    push 0;
    @returns.push 6;
    push 3;
    pop $state;
  };
  push $state;
  eq 6;
  if {
    pop $arrp1t960852b06b335f11;
    pop $arrp0t4e189db59a4b5ae7;
    push 7;
    pop $state;
  };
  push $state;
  eq 7;
  if {
    push 1;
    def $cond;
    pop $cond;
    push $cond;
    mul 8;
    push 1;
    sub $cond;
    mul 10;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 8;
  if {
    def $ip0t66d9f5721f9b6744;
    read $ip0t66d9f5721f9b6744;
    push $ip0t66d9f5721f9b6744;
    pop $inputp0t64c6aae285936e03;
    not $inputp0t64c6aae285936e03;
    del $ip0t66d9f5721f9b6744;
    def $cond;
    pop $cond;
    push $cond;
    mul 9;
    push 1;
    sub $cond;
    mul 11;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 9;
  if {
    push 10;
    pop $state;
  };
  push $state;
  eq 10;
  if {
    push $arrp0t4e189db59a4b5ae7;
    push $arrp1t960852b06b335f11;
    @returns.pop $state;
  };
  push $state;
  eq 11;
  if {
    push $inputp0t64c6aae285936e03;
    gt 96;
    def $cond;
    pop $cond;
    push $cond;
    mul 12;
    push 1;
    sub $cond;
    mul 13;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 12;
  if {
    push $inputp0t64c6aae285936e03;
    sub 32;
    pop $inputp0t64c6aae285936e03;
    push 13;
    pop $state;
  };
  push $state;
  eq 13;
  if {
    @heap.push $inputp0t64c6aae285936e03;
    inc $heapSize;
    push $arrp0t4e189db59a4b5ae7;
    push $arrp1t960852b06b335f11;
    add 1;
    pop $arrp1t960852b06b335f11;
    pop $arrp0t4e189db59a4b5ae7;
    push 7;
    pop $state;
  };
  push $state;
  eq 14;
  if {
    pop $otherp1ta3b5d5ed1ff3575b;
    pop $otherp0taf8bf87179792208;
    pop $startp0teced3b0606d386e7;
    pop $sp1ta2b91c22340ba2f4;
    pop $sp0t95986065824a3777;
    push $startp0teced3b0606d386e7;
    pop $ip0t7346e0f511b89c6e;
    push 15;
    pop $state;
  };
  push $state;
  eq 15;
  if {
    push $ip0t7346e0f511b89c6e;
    lt $sp1ta2b91c22340ba2f4;
    def $cond;
    pop $cond;
    push $cond;
    mul 16;
    push 1;
    sub $cond;
    mul 26;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 16;
  if {
    push 0;
    pop $jp0t9a9b5d605f22583d;
    push 17;
    pop $state;
  };
  push $state;
  eq 17;
  if {
    push $jp0t9a9b5d605f22583d;
    lt $otherp1ta3b5d5ed1ff3575b;
    def $cond;
    pop $cond;
    push $cond;
    mul 18;
    push 1;
    sub $cond;
    mul 22;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 18;
  if {
    push $sp0t95986065824a3777;
    push $sp1ta2b91c22340ba2f4;
    push $ip0t7346e0f511b89c6e;
    add $jp0t9a9b5d605f22583d;
    @returns.push 19;
    push 1;
    pop $state;
  };
  push $state;
  eq 19;
  if {
    push $otherp0taf8bf87179792208;
    push $otherp1ta3b5d5ed1ff3575b;
    push $jp0t9a9b5d605f22583d;
    @returns.push 20;
    push 1;
    pop $state;
  };
  push $state;
  eq 20;
  if {
    eq { nop; };
    not { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 21;
    push 1;
    sub $cond;
    mul 25;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 21;
  if {
    push 22;
    pop $state;
  };
  push $state;
  eq 22;
  if {
    push $jp0t9a9b5d605f22583d;
    eq $otherp1ta3b5d5ed1ff3575b;
    def $cond;
    pop $cond;
    push $cond;
    mul 23;
    push 1;
    sub $cond;
    mul 24;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 23;
  if {
    push $ip0t7346e0f511b89c6e;
    @returns.pop $state;
  };
  push $state;
  eq 24;
  if {
    push $ip0t7346e0f511b89c6e;
    add 1;
    pop $ip0t7346e0f511b89c6e;
    push 15;
    pop $state;
  };
  push $state;
  eq 25;
  if {
    push $jp0t9a9b5d605f22583d;
    add 1;
    pop $jp0t9a9b5d605f22583d;
    push 17;
    pop $state;
  };
  push $state;
  eq 26;
  if {
    neg 1;
    @returns.pop $state;
  };
  push $state;
  eq 27;
  if {
    @returns.push 28;
    push 5;
    pop $state;
  };
  push $state;
  eq 28;
  if {
    pop $inputp1td6171b79184ac85b;
    pop $inputp0t42c2021b54a09b03;
    push 0;
    pop $startIndexp0t8273183eb8f1e2fa;
    push $inputp0t42c2021b54a09b03;
    push $inputp1td6171b79184ac85b;
    push $startIndexp0t8273183eb8f1e2fa;
    push 0;
    push 5;
    @returns.push 29;
    push 14;
    pop $state;
  };
  push $state;
  eq 29;
  if {
    pop $threep0tbe8c3140eab95a14;
    push $threep0tbe8c3140eab95a14;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 30;
    push 1;
    sub $cond;
    mul 31;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 30;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 31;
  if {
    push $threep0tbe8c3140eab95a14;
    add 5;
    pop $startIndexp0t8273183eb8f1e2fa;
    push $inputp0t42c2021b54a09b03;
    push $inputp1td6171b79184ac85b;
    push $startIndexp0t8273183eb8f1e2fa;
    push 5;
    push 3;
    @returns.push 32;
    push 14;
    pop $state;
  };
  push $state;
  eq 32;
  if {
    pop $twop0t192b703ed2f8e303;
    push $twop0t192b703ed2f8e303;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 33;
    push 1;
    sub $cond;
    mul 34;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 33;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 34;
  if {
    push $twop0t192b703ed2f8e303;
    add 3;
    pop $startIndexp0t8273183eb8f1e2fa;
    push $inputp0t42c2021b54a09b03;
    push $inputp1td6171b79184ac85b;
    push $startIndexp0t8273183eb8f1e2fa;
    push 8;
    push 3;
    @returns.push 35;
    push 14;
    pop $state;
  };
  push $state;
  eq 35;
  if {
    pop $onep0t153d09583ebb53a5;
    push $onep0t153d09583ebb53a5;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 36;
    push 1;
    sub $cond;
    mul 37;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 36;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 37;
  if {
    push $onep0t153d09583ebb53a5;
    add 3;
    pop $startIndexp0t8273183eb8f1e2fa;
    push $inputp0t42c2021b54a09b03;
    push $inputp1td6171b79184ac85b;
    push $startIndexp0t8273183eb8f1e2fa;
    push 11;
    push 2;
    @returns.push 38;
    push 14;
    pop $state;
  };
  push $state;
  eq 38;
  if {
    pop $gop0tbca64ed48fb41d52;
    push $gop0tbca64ed48fb41d52;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 39;
    push 1;
    sub $cond;
    mul 40;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 39;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 40;
  if {
    def $ip0te327fe2ae234d73b;
    push $gop0tbca64ed48fb41d52;
    add 1;
    pop $ip0te327fe2ae234d73b;
    print $ip0te327fe2ae234d73b;
    flush;
    push 0;
    del $ip0te327fe2ae234d73b;
    @returns.pop $state;
  };
};
