def $state 27;
def @returns;
def @callStack;
def @heap;
def @antiHeap;
@heap.push 116;
@heap.push 104;
@heap.push 114;
@heap.push 101;
@heap.push 101;
@heap.push 116;
@heap.push 119;
@heap.push 111;
@heap.push 111;
@heap.push 110;
@heap.push 101;
@heap.push 103;
@heap.push 111;
def $heapSize 13;
def $lenp0te03225bedec3860;
def $datap0t92cbe99d5a63df6e;
def $arrp0tdd763ef09223bf03;
def $arrp1ta930a5c4663a046f;
def $inputp0t261deac6fc332e2f;
def $otherp0tb54cfc6470ad693a;
def $otherp1t39ccf1d1ea029eea;
def $startp0tb9a0ad69416150c6;
def $sp0t23140bed7b7a980;
def $sp1t25e30e7cfa76e295;
def $ip0ta341b2db3efe0ebb;
def $jp0t24750710b7ff8cc3;
def $inputp0td3e5ac4f4598a809;
def $inputp1tbb9cabed7cc011b5;
def $startIndexp0t42e99e0429583dd0;
def $threep0t27d497e40b1dccba;
def $twop0t3610a4a8fee029f7;
def $onep0t8a40bb14048b40f1;
def $gop0tef59d5b1ba7b4802;
@returns.push 0;
while $state {
  push $state;
  eq 1;
  if {
    def $indexp0tc52768c979bf4e2f;
    def $sp0t8961c3ce08462415;
    def $sp1ted16edb32497b70d;
    def $ptrp0t8c5493cb6f0ffb60;
    def $offsetp0tac916972e9a192f4;
    def $ptrp0t3a2ee59f830e13ee;
    pop $indexp0tc52768c979bf4e2f;
    pop $sp1ted16edb32497b70d;
    pop $sp0t8961c3ce08462415;
    push $sp0t8961c3ce08462415;
    push $indexp0tc52768c979bf4e2f;
    pop $offsetp0tac916972e9a192f4;
    pop $ptrp0t3a2ee59f830e13ee;
    push $ptrp0t3a2ee59f830e13ee;
    add $offsetp0tac916972e9a192f4;
    pop $ptrp0t8c5493cb6f0ffb60;
    push $ptrp0t8c5493cb6f0ffb60;
    def $ptr;
    pop $ptr;
    def $tempDeref;
    push $heapSize;
    sub $ptr;
    del $ptr;
    def $moved;
    clone $moved;
    for {
    @heap.pop $tempDeref;
    @antiHeap.push $tempDeref;
    };
    @antiHeap.pop $tempDeref;
    push $tempDeref;
    @heap.push $tempDeref;
    push $moved;
    sub 1;
    for {
    @antiHeap.pop $tempDeref;
    @heap.push $tempDeref;
    };
    del $moved;
    del $tempDeref;
    del $offsetp0tac916972e9a192f4;
    del $ptrp0t3a2ee59f830e13ee;
    del $indexp0tc52768c979bf4e2f;
    del $sp0t8961c3ce08462415;
    del $sp1ted16edb32497b70d;
    del $ptrp0t8c5493cb6f0ffb60;
    @returns.pop $state;
  };
  push $state;
  eq 2;
  if {
    def $np0tc42f5e6feeb1ef10;
    def $amountp0tf2f24d4790e60d80;
    def $ptrp0t6a5661ec7f570b20;
    pop $np0tc42f5e6feeb1ef10;
    push $np0tc42f5e6feeb1ef10;
    mul 1;
    pop $amountp0tf2f24d4790e60d80;
    push $heapSize;
    pop $ptrp0t6a5661ec7f570b20;
    push $amountp0tf2f24d4790e60d80;
    for {
        @heap.push 0;
        inc $heapSize;
    };
    push $ptrp0t6a5661ec7f570b20;
    del $np0tc42f5e6feeb1ef10;
    del $amountp0tf2f24d4790e60d80;
    del $ptrp0t6a5661ec7f570b20;
    @returns.pop $state;
  };
  push $state;
  eq 3;
  if {
    pop $lenp0te03225bedec3860;
    push $lenp0te03225bedec3860;
    @callStack.push $lenp0te03225bedec3860;
    @returns.push 4;
    push 2;
    pop $state;
  };
  push $state;
  eq 4;
  if {
    @callStack.pop $lenp0te03225bedec3860;
    pop $datap0t92cbe99d5a63df6e;
    push $datap0t92cbe99d5a63df6e;
    push $lenp0te03225bedec3860;
    @returns.pop $state;
  };
  push $state;
  eq 5;
  if {
    push 0;
    @returns.push 6;
    push 3;
    pop $state;
  };
  push $state;
  eq 6;
  if {
    pop $arrp1ta930a5c4663a046f;
    pop $arrp0tdd763ef09223bf03;
    push 7;
    pop $state;
  };
  push $state;
  eq 7;
  if {
    push 1;
    def $cond;
    pop $cond;
    push $cond;
    mul 8;
    push 1;
    sub $cond;
    mul 10;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 8;
  if {
    def $ip0tee53a777f4cb34ca;
    read $ip0tee53a777f4cb34ca;
    push $ip0tee53a777f4cb34ca;
    pop $inputp0t261deac6fc332e2f;
    not $inputp0t261deac6fc332e2f;
    del $ip0tee53a777f4cb34ca;
    def $cond;
    pop $cond;
    push $cond;
    mul 9;
    push 1;
    sub $cond;
    mul 11;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 9;
  if {
    push 10;
    pop $state;
  };
  push $state;
  eq 10;
  if {
    push $arrp0tdd763ef09223bf03;
    push $arrp1ta930a5c4663a046f;
    @returns.pop $state;
  };
  push $state;
  eq 11;
  if {
    push $inputp0t261deac6fc332e2f;
    gt 64;
    push $inputp0t261deac6fc332e2f;
    lt 91;
    and { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 12;
    push 1;
    sub $cond;
    mul 13;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 12;
  if {
    push $inputp0t261deac6fc332e2f;
    add 32;
    pop $inputp0t261deac6fc332e2f;
    push 13;
    pop $state;
  };
  push $state;
  eq 13;
  if {
    @heap.push $inputp0t261deac6fc332e2f;
    inc $heapSize;
    push $arrp0tdd763ef09223bf03;
    push $arrp1ta930a5c4663a046f;
    add 1;
    pop $arrp1ta930a5c4663a046f;
    pop $arrp0tdd763ef09223bf03;
    push 7;
    pop $state;
  };
  push $state;
  eq 14;
  if {
    pop $otherp1t39ccf1d1ea029eea;
    pop $otherp0tb54cfc6470ad693a;
    pop $startp0tb9a0ad69416150c6;
    pop $sp1t25e30e7cfa76e295;
    pop $sp0t23140bed7b7a980;
    push $startp0tb9a0ad69416150c6;
    pop $ip0ta341b2db3efe0ebb;
    push 15;
    pop $state;
  };
  push $state;
  eq 15;
  if {
    push $ip0ta341b2db3efe0ebb;
    lt $sp1t25e30e7cfa76e295;
    def $cond;
    pop $cond;
    push $cond;
    mul 16;
    push 1;
    sub $cond;
    mul 26;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 16;
  if {
    push 0;
    pop $jp0t24750710b7ff8cc3;
    push 17;
    pop $state;
  };
  push $state;
  eq 17;
  if {
    push $jp0t24750710b7ff8cc3;
    lt $otherp1t39ccf1d1ea029eea;
    def $cond;
    pop $cond;
    push $cond;
    mul 18;
    push 1;
    sub $cond;
    mul 22;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 18;
  if {
    push $sp0t23140bed7b7a980;
    push $sp1t25e30e7cfa76e295;
    push $ip0ta341b2db3efe0ebb;
    add $jp0t24750710b7ff8cc3;
    @callStack.push $jp0t24750710b7ff8cc3;
    @callStack.push $otherp0tb54cfc6470ad693a;
    @callStack.push $otherp1t39ccf1d1ea029eea;
    @callStack.push $startp0tb9a0ad69416150c6;
    @callStack.push $sp0t23140bed7b7a980;
    @callStack.push $sp1t25e30e7cfa76e295;
    @callStack.push $ip0ta341b2db3efe0ebb;
    @returns.push 19;
    push 1;
    pop $state;
  };
  push $state;
  eq 19;
  if {
    @callStack.pop $ip0ta341b2db3efe0ebb;
    @callStack.pop $sp1t25e30e7cfa76e295;
    @callStack.pop $sp0t23140bed7b7a980;
    @callStack.pop $startp0tb9a0ad69416150c6;
    @callStack.pop $otherp1t39ccf1d1ea029eea;
    @callStack.pop $otherp0tb54cfc6470ad693a;
    @callStack.pop $jp0t24750710b7ff8cc3;
    push $otherp0tb54cfc6470ad693a;
    push $otherp1t39ccf1d1ea029eea;
    push $jp0t24750710b7ff8cc3;
    @callStack.push $jp0t24750710b7ff8cc3;
    @callStack.push $otherp0tb54cfc6470ad693a;
    @callStack.push $otherp1t39ccf1d1ea029eea;
    @callStack.push $startp0tb9a0ad69416150c6;
    @callStack.push $sp0t23140bed7b7a980;
    @callStack.push $sp1t25e30e7cfa76e295;
    @callStack.push $ip0ta341b2db3efe0ebb;
    @returns.push 20;
    push 1;
    pop $state;
  };
  push $state;
  eq 20;
  if {
    @callStack.pop $ip0ta341b2db3efe0ebb;
    @callStack.pop $sp1t25e30e7cfa76e295;
    @callStack.pop $sp0t23140bed7b7a980;
    @callStack.pop $startp0tb9a0ad69416150c6;
    @callStack.pop $otherp1t39ccf1d1ea029eea;
    @callStack.pop $otherp0tb54cfc6470ad693a;
    @callStack.pop $jp0t24750710b7ff8cc3;
    eq { nop; };
    not { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 21;
    push 1;
    sub $cond;
    mul 25;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 21;
  if {
    push 22;
    pop $state;
  };
  push $state;
  eq 22;
  if {
    push $jp0t24750710b7ff8cc3;
    eq $otherp1t39ccf1d1ea029eea;
    def $cond;
    pop $cond;
    push $cond;
    mul 23;
    push 1;
    sub $cond;
    mul 24;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 23;
  if {
    push $ip0ta341b2db3efe0ebb;
    @returns.pop $state;
  };
  push $state;
  eq 24;
  if {
    push $ip0ta341b2db3efe0ebb;
    add 1;
    pop $ip0ta341b2db3efe0ebb;
    push 15;
    pop $state;
  };
  push $state;
  eq 25;
  if {
    push $jp0t24750710b7ff8cc3;
    add 1;
    pop $jp0t24750710b7ff8cc3;
    push 17;
    pop $state;
  };
  push $state;
  eq 26;
  if {
    neg 1;
    @returns.pop $state;
  };
  push $state;
  eq 27;
  if {
    @returns.push 28;
    push 5;
    pop $state;
  };
  push $state;
  eq 28;
  if {
    pop $inputp1tbb9cabed7cc011b5;
    pop $inputp0td3e5ac4f4598a809;
    push 0;
    pop $startIndexp0t42e99e0429583dd0;
    push $inputp0td3e5ac4f4598a809;
    push $inputp1tbb9cabed7cc011b5;
    push $startIndexp0t42e99e0429583dd0;
    push 0;
    push 5;
    @callStack.push $inputp0td3e5ac4f4598a809;
    @callStack.push $inputp1tbb9cabed7cc011b5;
    @callStack.push $startIndexp0t42e99e0429583dd0;
    @returns.push 29;
    push 14;
    pop $state;
  };
  push $state;
  eq 29;
  if {
    @callStack.pop $startIndexp0t42e99e0429583dd0;
    @callStack.pop $inputp1tbb9cabed7cc011b5;
    @callStack.pop $inputp0td3e5ac4f4598a809;
    pop $threep0t27d497e40b1dccba;
    push $threep0t27d497e40b1dccba;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 30;
    push 1;
    sub $cond;
    mul 31;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 30;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 31;
  if {
    push $threep0t27d497e40b1dccba;
    add 5;
    pop $startIndexp0t42e99e0429583dd0;
    push $inputp0td3e5ac4f4598a809;
    push $inputp1tbb9cabed7cc011b5;
    push $startIndexp0t42e99e0429583dd0;
    push 5;
    push 3;
    @callStack.push $inputp0td3e5ac4f4598a809;
    @callStack.push $inputp1tbb9cabed7cc011b5;
    @callStack.push $startIndexp0t42e99e0429583dd0;
    @callStack.push $threep0t27d497e40b1dccba;
    @returns.push 32;
    push 14;
    pop $state;
  };
  push $state;
  eq 32;
  if {
    @callStack.pop $threep0t27d497e40b1dccba;
    @callStack.pop $startIndexp0t42e99e0429583dd0;
    @callStack.pop $inputp1tbb9cabed7cc011b5;
    @callStack.pop $inputp0td3e5ac4f4598a809;
    pop $twop0t3610a4a8fee029f7;
    push $twop0t3610a4a8fee029f7;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 33;
    push 1;
    sub $cond;
    mul 34;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 33;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 34;
  if {
    push $twop0t3610a4a8fee029f7;
    add 3;
    pop $startIndexp0t42e99e0429583dd0;
    push $inputp0td3e5ac4f4598a809;
    push $inputp1tbb9cabed7cc011b5;
    push $startIndexp0t42e99e0429583dd0;
    push 8;
    push 3;
    @callStack.push $inputp0td3e5ac4f4598a809;
    @callStack.push $inputp1tbb9cabed7cc011b5;
    @callStack.push $startIndexp0t42e99e0429583dd0;
    @callStack.push $threep0t27d497e40b1dccba;
    @callStack.push $twop0t3610a4a8fee029f7;
    @returns.push 35;
    push 14;
    pop $state;
  };
  push $state;
  eq 35;
  if {
    @callStack.pop $twop0t3610a4a8fee029f7;
    @callStack.pop $threep0t27d497e40b1dccba;
    @callStack.pop $startIndexp0t42e99e0429583dd0;
    @callStack.pop $inputp1tbb9cabed7cc011b5;
    @callStack.pop $inputp0td3e5ac4f4598a809;
    pop $onep0t8a40bb14048b40f1;
    push $onep0t8a40bb14048b40f1;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 36;
    push 1;
    sub $cond;
    mul 37;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 36;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 37;
  if {
    push $onep0t8a40bb14048b40f1;
    add 3;
    pop $startIndexp0t42e99e0429583dd0;
    push $inputp0td3e5ac4f4598a809;
    push $inputp1tbb9cabed7cc011b5;
    push $startIndexp0t42e99e0429583dd0;
    push 11;
    push 2;
    @callStack.push $inputp0td3e5ac4f4598a809;
    @callStack.push $inputp1tbb9cabed7cc011b5;
    @callStack.push $startIndexp0t42e99e0429583dd0;
    @callStack.push $threep0t27d497e40b1dccba;
    @callStack.push $twop0t3610a4a8fee029f7;
    @callStack.push $onep0t8a40bb14048b40f1;
    @returns.push 38;
    push 14;
    pop $state;
  };
  push $state;
  eq 38;
  if {
    @callStack.pop $onep0t8a40bb14048b40f1;
    @callStack.pop $twop0t3610a4a8fee029f7;
    @callStack.pop $threep0t27d497e40b1dccba;
    @callStack.pop $startIndexp0t42e99e0429583dd0;
    @callStack.pop $inputp1tbb9cabed7cc011b5;
    @callStack.pop $inputp0td3e5ac4f4598a809;
    pop $gop0tef59d5b1ba7b4802;
    push $gop0tef59d5b1ba7b4802;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 39;
    push 1;
    sub $cond;
    mul 40;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 39;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 40;
  if {
    def $ip0tb5ffd77c21f2f4fa;
    push $gop0tef59d5b1ba7b4802;
    add 1;
    pop $ip0tb5ffd77c21f2f4fa;
    print $ip0tb5ffd77c21f2f4fa;
    flush;
    push 0;
    del $ip0tb5ffd77c21f2f4fa;
    @returns.pop $state;
  };
};
