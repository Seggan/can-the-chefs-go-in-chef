def $state 27;
def @returns;
def @callStack;
def @heap;
def @antiHeap;
@heap.push 84;
@heap.push 72;
@heap.push 82;
@heap.push 69;
@heap.push 69;
@heap.push 84;
@heap.push 87;
@heap.push 79;
@heap.push 79;
@heap.push 78;
@heap.push 69;
@heap.push 71;
@heap.push 79;
def $heapSize 13;
def $lenp0t2632fe29d6b533ee;
def $datap0t476dae8fc7dcfbe4;
def $arrp0t19d74e40e9052bf3;
def $arrp1tc5e729cf642f72f2;
def $inputp0t8e71f2cba343ce12;
def $otherp0t40a3c0e777dec848;
def $otherp1t40add352b3036fd3;
def $startp0t963fed25ecee7a88;
def $sp0t98edbc4b22a1116d;
def $sp1t966aee6e22108c5a;
def $ip0t1fea2f49e7f60cca;
def $jp0tb985a4988b0b9880;
def $inputp0t7c224dd8f18449bf;
def $inputp1tbbb4ae8416969dcb;
def $startIndexp0t9e214a94fd366ab2;
def $threep0t495257dcedba2552;
def $twop0tce0520e7ba0f4011;
def $onep0tf4f7a96f6d4f5386;
def $gop0t8a29d728c4aff03d;
@returns.push 0;
while $state {
  push $state;
  eq 1;
  if {
    def $indexp0t9ff8766bda02628;
    def $sp0t1065d14e34f5d98f;
    def $sp1t2d59f9e5047c470b;
    def $ptrp0tf963ead8912335a6;
    def $offsetp0tfbdf364e2c52b1e9;
    def $ptrp0tb3e1eccd8762c96b;
    pop $indexp0t9ff8766bda02628;
    pop $sp1t2d59f9e5047c470b;
    pop $sp0t1065d14e34f5d98f;
    push $sp0t1065d14e34f5d98f;
    push $indexp0t9ff8766bda02628;
    pop $offsetp0tfbdf364e2c52b1e9;
    pop $ptrp0tb3e1eccd8762c96b;
    push $ptrp0tb3e1eccd8762c96b;
    add $offsetp0tfbdf364e2c52b1e9;
    pop $ptrp0tf963ead8912335a6;
    push $ptrp0tf963ead8912335a6;
    def $ptr;
    pop $ptr;
    def $tempDeref;
    push $heapSize;
    sub $ptr;
    del $ptr;
    def $moved;
    clone $moved;
    for {
    @heap.pop $tempDeref;
    @antiHeap.push $tempDeref;
    };
    @antiHeap.pop $tempDeref;
    push $tempDeref;
    @heap.push $tempDeref;
    push $moved;
    sub 1;
    for {
    @antiHeap.pop $tempDeref;
    @heap.push $tempDeref;
    };
    del $moved;
    del $tempDeref;
    del $offsetp0tfbdf364e2c52b1e9;
    del $ptrp0tb3e1eccd8762c96b;
    del $indexp0t9ff8766bda02628;
    del $sp0t1065d14e34f5d98f;
    del $sp1t2d59f9e5047c470b;
    del $ptrp0tf963ead8912335a6;
    @returns.pop $state;
  };
  push $state;
  eq 2;
  if {
    def $np0t88527532eae36e5f;
    def $amountp0tee5bfd5914f4897f;
    def $ptrp0tf370647049064567;
    pop $np0t88527532eae36e5f;
    push $np0t88527532eae36e5f;
    mul 1;
    pop $amountp0tee5bfd5914f4897f;
    push $heapSize;
    pop $ptrp0tf370647049064567;
    push $amountp0tee5bfd5914f4897f;
    for {
        @heap.push 0;
        inc $heapSize;
    };
    push $ptrp0tf370647049064567;
    del $np0t88527532eae36e5f;
    del $amountp0tee5bfd5914f4897f;
    del $ptrp0tf370647049064567;
    @returns.pop $state;
  };
  push $state;
  eq 3;
  if {
    pop $lenp0t2632fe29d6b533ee;
    push $lenp0t2632fe29d6b533ee;
    @returns.push 4;
    push 2;
    pop $state;
  };
  push $state;
  eq 4;
  if {
    pop $datap0t476dae8fc7dcfbe4;
    push $datap0t476dae8fc7dcfbe4;
    push $lenp0t2632fe29d6b533ee;
    @returns.pop $state;
  };
  push $state;
  eq 5;
  if {
    push 0;
    @returns.push 6;
    push 3;
    pop $state;
  };
  push $state;
  eq 6;
  if {
    pop $arrp1tc5e729cf642f72f2;
    pop $arrp0t19d74e40e9052bf3;
    push 7;
    pop $state;
  };
  push $state;
  eq 7;
  if {
    push 1;
    def $cond;
    pop $cond;
    push $cond;
    mul 8;
    push 1;
    sub $cond;
    mul 10;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 8;
  if {
    def $ip0tf498a2fd33c926e9;
    read $ip0tf498a2fd33c926e9;
    push $ip0tf498a2fd33c926e9;
    pop $inputp0t8e71f2cba343ce12;
    not $inputp0t8e71f2cba343ce12;
    del $ip0tf498a2fd33c926e9;
    def $cond;
    pop $cond;
    push $cond;
    mul 9;
    push 1;
    sub $cond;
    mul 11;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 9;
  if {
    push 10;
    pop $state;
  };
  push $state;
  eq 10;
  if {
    push $arrp0t19d74e40e9052bf3;
    push $arrp1tc5e729cf642f72f2;
    @returns.pop $state;
  };
  push $state;
  eq 11;
  if {
    push $inputp0t8e71f2cba343ce12;
    gt 96;
    def $cond;
    pop $cond;
    push $cond;
    mul 12;
    push 1;
    sub $cond;
    mul 13;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 12;
  if {
    push $inputp0t8e71f2cba343ce12;
    sub 32;
    pop $inputp0t8e71f2cba343ce12;
    push 13;
    pop $state;
  };
  push $state;
  eq 13;
  if {
    @heap.push $inputp0t8e71f2cba343ce12;
    inc $heapSize;
    push $arrp0t19d74e40e9052bf3;
    push $arrp1tc5e729cf642f72f2;
    add 1;
    pop $arrp1tc5e729cf642f72f2;
    pop $arrp0t19d74e40e9052bf3;
    push 7;
    pop $state;
  };
  push $state;
  eq 14;
  if {
    pop $otherp1t40add352b3036fd3;
    pop $otherp0t40a3c0e777dec848;
    pop $startp0t963fed25ecee7a88;
    pop $sp1t966aee6e22108c5a;
    pop $sp0t98edbc4b22a1116d;
    push $startp0t963fed25ecee7a88;
    pop $ip0t1fea2f49e7f60cca;
    push 15;
    pop $state;
  };
  push $state;
  eq 15;
  if {
    push $ip0t1fea2f49e7f60cca;
    lt $sp1t966aee6e22108c5a;
    def $cond;
    pop $cond;
    push $cond;
    mul 16;
    push 1;
    sub $cond;
    mul 26;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 16;
  if {
    push 0;
    pop $jp0tb985a4988b0b9880;
    push 17;
    pop $state;
  };
  push $state;
  eq 17;
  if {
    push $jp0tb985a4988b0b9880;
    lt $otherp1t40add352b3036fd3;
    def $cond;
    pop $cond;
    push $cond;
    mul 18;
    push 1;
    sub $cond;
    mul 22;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 18;
  if {
    push $sp0t98edbc4b22a1116d;
    push $sp1t966aee6e22108c5a;
    push $ip0t1fea2f49e7f60cca;
    add $jp0tb985a4988b0b9880;
    @returns.push 19;
    push 1;
    pop $state;
  };
  push $state;
  eq 19;
  if {
    push $otherp0t40a3c0e777dec848;
    push $otherp1t40add352b3036fd3;
    push $jp0tb985a4988b0b9880;
    @returns.push 20;
    push 1;
    pop $state;
  };
  push $state;
  eq 20;
  if {
    eq { nop; };
    not { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 21;
    push 1;
    sub $cond;
    mul 25;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 21;
  if {
    push 22;
    pop $state;
  };
  push $state;
  eq 22;
  if {
    push $jp0tb985a4988b0b9880;
    eq $otherp1t40add352b3036fd3;
    def $cond;
    pop $cond;
    push $cond;
    mul 23;
    push 1;
    sub $cond;
    mul 24;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 23;
  if {
    push $ip0t1fea2f49e7f60cca;
    @returns.pop $state;
  };
  push $state;
  eq 24;
  if {
    push $ip0t1fea2f49e7f60cca;
    add 1;
    pop $ip0t1fea2f49e7f60cca;
    push 15;
    pop $state;
  };
  push $state;
  eq 25;
  if {
    push $jp0tb985a4988b0b9880;
    add 1;
    pop $jp0tb985a4988b0b9880;
    push 17;
    pop $state;
  };
  push $state;
  eq 26;
  if {
    neg 1;
    @returns.pop $state;
  };
  push $state;
  eq 27;
  if {
    @returns.push 28;
    push 5;
    pop $state;
  };
  push $state;
  eq 28;
  if {
    pop $inputp1tbbb4ae8416969dcb;
    pop $inputp0t7c224dd8f18449bf;
    push 0;
    pop $startIndexp0t9e214a94fd366ab2;
    push $inputp0t7c224dd8f18449bf;
    push $inputp1tbbb4ae8416969dcb;
    push $startIndexp0t9e214a94fd366ab2;
    push 0;
    push 5;
    @returns.push 29;
    push 14;
    pop $state;
  };
  push $state;
  eq 29;
  if {
    pop $threep0t495257dcedba2552;
    push $threep0t495257dcedba2552;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 30;
    push 1;
    sub $cond;
    mul 31;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 30;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 31;
  if {
    push $threep0t495257dcedba2552;
    add 5;
    pop $startIndexp0t9e214a94fd366ab2;
    push $inputp0t7c224dd8f18449bf;
    push $inputp1tbbb4ae8416969dcb;
    push $startIndexp0t9e214a94fd366ab2;
    push 5;
    push 3;
    @returns.push 32;
    push 14;
    pop $state;
  };
  push $state;
  eq 32;
  if {
    pop $twop0tce0520e7ba0f4011;
    push $twop0tce0520e7ba0f4011;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 33;
    push 1;
    sub $cond;
    mul 34;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 33;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 34;
  if {
    push $twop0tce0520e7ba0f4011;
    add 3;
    pop $startIndexp0t9e214a94fd366ab2;
    push $inputp0t7c224dd8f18449bf;
    push $inputp1tbbb4ae8416969dcb;
    push $startIndexp0t9e214a94fd366ab2;
    push 8;
    push 3;
    @returns.push 35;
    push 14;
    pop $state;
  };
  push $state;
  eq 35;
  if {
    pop $onep0tf4f7a96f6d4f5386;
    push $onep0tf4f7a96f6d4f5386;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 36;
    push 1;
    sub $cond;
    mul 37;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 36;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 37;
  if {
    push $onep0tf4f7a96f6d4f5386;
    add 3;
    pop $startIndexp0t9e214a94fd366ab2;
    push $inputp0t7c224dd8f18449bf;
    push $inputp1tbbb4ae8416969dcb;
    push $startIndexp0t9e214a94fd366ab2;
    push 11;
    push 2;
    @returns.push 38;
    push 14;
    pop $state;
  };
  push $state;
  eq 38;
  if {
    pop $gop0t8a29d728c4aff03d;
    push $gop0t8a29d728c4aff03d;
    neg 1;
    eq { nop; };
    def $cond;
    pop $cond;
    push $cond;
    mul 39;
    push 1;
    sub $cond;
    mul 40;
    add { nop; };
    pop $state;
    del $cond;
  };
  push $state;
  eq 39;
  if {
    push 0;
    @returns.pop $state;
  };
  push $state;
  eq 40;
  if {
    def $ip0t560e1feb3a7f1205;
    push $gop0t8a29d728c4aff03d;
    add 1;
    pop $ip0t560e1feb3a7f1205;
    print $ip0t560e1feb3a7f1205;
    flush;
    push 0;
    del $ip0t560e1feb3a7f1205;
    @returns.pop $state;
  };
};
