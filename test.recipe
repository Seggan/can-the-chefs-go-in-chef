def $state 18;
def @returns;
def @callStack;
def @heap;
def @antiHeap;
@heap.push 84;
@heap.push 72;
@heap.push 82;
@heap.push 69;
@heap.push 69;
@heap.push 84;
@heap.push 87;
@heap.push 79;
@heap.push 79;
@heap.push 78;
@heap.push 69;
@heap.push 71;
@heap.push 79;
def $heapSize 13;
def $lenp0tbae4ff24463df1b4;
def $datap0t38faeb0c86c1a966;
def $otherp0t86fd58728a3fd4cc;
def $otherp1td447f87bb243ea34;
def $startp0tb7c707edf2a82a79;
def $sp0t123cf87421e2b0dd;
def $sp1t34d292c8952829a0;
def $ip0ta45b3e482c15603d;
def $jp0t2feeeed9f4373729;
def $inputp0t3c29bbf04fb849da;
def $inputp1t31ad248129e326c7;
def $arrp0tb52c3805864d5855;
def $arrp1t4f73ef209a3b86b7;
def $inputp0t93611b5156c828;
def $startIndexp0tf0419b3436249f85;
def $threep0tf7d194d3bc3c0d63;
def $twop0tb2ba0337ea972b92;
def $onep0tf7fd325a00c16566;
def $gop0tee9872d327045077;
@returns.push 0;
while $state {

  push $state; eq 1; if {
    def $indexp0t7a414510888f41a2;
    pop $indexp0t7a414510888f41a2;
    def $sp1t29140eae52ba99d3;
    pop $sp1t29140eae52ba99d3;
    del $sp1t29140eae52ba99d3;
    def $sp0t35bb08adfb526326;
    del $sp0t35bb08adfb526326;
    def $ptrp0td649ad35528e13de;
    del $ptrp0td649ad35528e13de;
    add $indexp0t7a414510888f41a2;
    pop $indexp0t7a414510888f41a2;
    push $heapSize;
    sub $indexp0t7a414510888f41a2;
    pop $indexp0t7a414510888f41a2;
    push $indexp0t7a414510888f41a2;
    def $tempDeref;
    for {
    @heap.pop $tempDeref;
    @antiHeap.push $tempDeref;
    };
    @antiHeap.pop $tempDeref;
    push $tempDeref;
    @heap.push $tempDeref;
    push $indexp0t7a414510888f41a2;
    del $indexp0t7a414510888f41a2;
    sub 1;
    for {
    @antiHeap.pop $tempDeref;
    @heap.push $tempDeref;
    };
    del $tempDeref;
    @returns.pop $state;
  };
  push $state; eq 2; if {
    mul 1;
    def $amountp0teb0782dea35fc4f6;
    pop $amountp0teb0782dea35fc4f6;
    push $heapSize;
    def $ptrp0td82ac70522a987b;
    pop $ptrp0td82ac70522a987b;
    push $amountp0teb0782dea35fc4f6;
    for {
        @heap.push 0;
        inc $heapSize;
    };
    del $amountp0teb0782dea35fc4f6;
    push $ptrp0td82ac70522a987b;
    del $ptrp0td82ac70522a987b;
    @returns.pop $state;
  };
  push $state; eq 3; if {
    pop $lenp0tbae4ff24463df1b4;
    push $lenp0tbae4ff24463df1b4;
    @returns.push 4;
    push 2;//[noinline]
    pop $state;
  };
  push $state; eq 4; if {
    pop $datap0t38faeb0c86c1a966;
    push $datap0t38faeb0c86c1a966;
    push $lenp0tbae4ff24463df1b4;
    @returns.pop $state;
  };
  push $state; eq 5; if {
    pop $otherp1td447f87bb243ea34;
    pop $otherp0t86fd58728a3fd4cc;
    pop $startp0tb7c707edf2a82a79;
    pop $sp1t34d292c8952829a0;
    pop $sp0t123cf87421e2b0dd;
    push $startp0tb7c707edf2a82a79;
    pop $ip0ta45b3e482c15603d;
    push 6;//[inline]
    pop $state;
  };
  push $state; eq 6; if {
    push $ip0ta45b3e482c15603d;
    push $sp1t34d292c8952829a0;
    def $TEMPta87046ce13adaf6e;
    pop $TEMPta87046ce13adaf6e;
    sub $TEMPta87046ce13adaf6e;
    pop $TEMPta87046ce13adaf6e;
    if $TEMPta87046ce13adaf6e {
    def @TEMPt260a528949c7a32d;
    @TEMPt260a528949c7a32d.push 0;
    @TEMPt260a528949c7a32d.sub 1;
    @TEMPt260a528949c7a32d.push 1;
    @TEMPt260a528949c7a32d.rot $TEMPta87046ce13adaf6e;
    @TEMPt260a528949c7a32d.pop $null;
    @TEMPt260a528949c7a32d.pop $TEMPta87046ce13adaf6e;
    undef @TEMPt260a528949c7a32d;
    };
    push $TEMPta87046ce13adaf6e;
    del $TEMPta87046ce13adaf6e;
    push 0;
    sub 1;
    def $TEMPtc7015a7a63419500;
    pop $TEMPtc7015a7a63419500;
    sub $TEMPtc7015a7a63419500;
    pop $TEMPtc7015a7a63419500;
    push 1;
    if $TEMPtc7015a7a63419500 {
    pop $null;
    push 0;
    };
    pop $TEMPtc7015a7a63419500;
    push 17;//[noinline]
    if $TEMPtc7015a7a63419500 {
    pop;
    push 0;
    pop $jp0t2feeeed9f4373729;
    push 8;//[inline]
   };
    del $TEMPtc7015a7a63419500;
    pop $state;
  };
  
  push $state; eq 8; if {
    push $jp0t2feeeed9f4373729;
    push $otherp1td447f87bb243ea34;
    def $TEMPt604af2579335a0ff;
    pop $TEMPt604af2579335a0ff;
    sub $TEMPt604af2579335a0ff;
    pop $TEMPt604af2579335a0ff;
    if $TEMPt604af2579335a0ff {
    def @TEMPt614864e0aa6cff9;
    @TEMPt614864e0aa6cff9.push 0;
    @TEMPt614864e0aa6cff9.sub 1;
    @TEMPt614864e0aa6cff9.push 1;
    @TEMPt614864e0aa6cff9.rot $TEMPt604af2579335a0ff;
    @TEMPt614864e0aa6cff9.pop $null;
    @TEMPt614864e0aa6cff9.pop $TEMPt604af2579335a0ff;
    undef @TEMPt614864e0aa6cff9;
    };
    push $TEMPt604af2579335a0ff;
    del $TEMPt604af2579335a0ff;
    push 0;
    sub 1;
    def $TEMPt16c305ef2fca681f;
    pop $TEMPt16c305ef2fca681f;
    sub $TEMPt16c305ef2fca681f;
    pop $TEMPt16c305ef2fca681f;
    push 1;
    if $TEMPt16c305ef2fca681f {
    pop $null;
    push 0;
    };
    pop $TEMPt16c305ef2fca681f;
    push 13;//[noinline]
    if $TEMPt16c305ef2fca681f {
    pop;
    push $sp0t123cf87421e2b0dd;
    push $sp1t34d292c8952829a0;
    push $ip0ta45b3e482c15603d;
    add $jp0t2feeeed9f4373729;
    @returns.push 10;
    push 1;//[noinline]
   };
    del $TEMPt16c305ef2fca681f;
    pop $state;
  };
  
  push $state; eq 10; if {
    push $otherp0t86fd58728a3fd4cc;
    push $otherp1td447f87bb243ea34;
    push $jp0t2feeeed9f4373729;
    @returns.push 11;
    push 1;//[noinline]
    pop $state;
  };
  push $state; eq 11; if {
    def $TEMPte44abbe984805076;
    pop $TEMPte44abbe984805076;
    sub $TEMPte44abbe984805076;
    pop $TEMPte44abbe984805076;
    push 0;
    if $TEMPte44abbe984805076 {
    pop $null;
    push 1;
    };
    pop $TEMPte44abbe984805076;
    push 16;//[noinline]
    if $TEMPte44abbe984805076 {
    pop;
    push $jp0t2feeeed9f4373729;
    push $otherp1td447f87bb243ea34;
    def $TEMPt3aa93ba4c2e9f49c;
    pop $TEMPt3aa93ba4c2e9f49c;
    sub $TEMPt3aa93ba4c2e9f49c;
    pop $TEMPt3aa93ba4c2e9f49c;
    push 1;
    if $TEMPt3aa93ba4c2e9f49c {
    pop $null;
    push 0;
    };
    pop $TEMPt3aa93ba4c2e9f49c;
    push 15;//[noinline]
    if $TEMPt3aa93ba4c2e9f49c {
    pop;
    push $ip0ta45b3e482c15603d;
    @returns.pop $state;};
    del $TEMPt3aa93ba4c2e9f49c;
   };
    del $TEMPte44abbe984805076;
    pop $state;
  };
  
  
  
  push $state; eq 15; if {
    push $ip0ta45b3e482c15603d;
    add 1;
    pop $ip0ta45b3e482c15603d;
    push 6;//[inline]
    pop $state;
  };
  push $state; eq 16; if {
    push $jp0t2feeeed9f4373729;
    add 1;
    pop $jp0t2feeeed9f4373729;
    push 8;//[inline]
    pop $state;
  };
  push $state; eq 17; if {
    push 0;
    sub 1;
    @returns.pop $state;
  };
  push $state; eq 18; if {
    push 0;
    @returns.push 19;
    push 3;//[noinline]
    pop $state;
  };
  push $state; eq 19; if {
    pop $arrp1t4f73ef209a3b86b7;
    pop $arrp0tb52c3805864d5855;
    push 20;//[inline]
    pop $state;
  };
  push $state; eq 20; if {
    def $ip0t5f4df11c998123c6;
    read $ip0t5f4df11c998123c6;
    push $ip0t5f4df11c998123c6;
    del $ip0t5f4df11c998123c6;
    pop $inputp0t93611b5156c828;
    push $inputp0t93611b5156c828;
    def $TEMPt851d2aebd41daa90;
    pop $TEMPt851d2aebd41daa90;
    push 1;
    if $TEMPt851d2aebd41daa90 {
    pop $null;
    push 0;
    };
    pop $TEMPt851d2aebd41daa90;
    push 36;//[noinline]
    if $TEMPt851d2aebd41daa90 {
    pop;
    push $arrp0tb52c3805864d5855;
    push $arrp1t4f73ef209a3b86b7;
    pop $inputp1t31ad248129e326c7;
    pop $inputp0t3c29bbf04fb849da;
    push 0;
    pop $startIndexp0tf0419b3436249f85;
    push $inputp0t3c29bbf04fb849da;
    push $inputp1t31ad248129e326c7;
    push $startIndexp0tf0419b3436249f85;
    push 0;
    push 5;
    @returns.push 24;
    push 5;//[noinline]
   };
    del $TEMPt851d2aebd41daa90;
   pop $state;
  };
  
  
  
  push $state; eq 24; if {
    pop $threep0tf7d194d3bc3c0d63;
    push $threep0tf7d194d3bc3c0d63;
    def $TEMPtfaae2af983704358;
    push 0;
    sub 1;
    pop $TEMPtfaae2af983704358;
    sub $TEMPtfaae2af983704358;
    pop $TEMPtfaae2af983704358;
    push 1;
    if $TEMPtfaae2af983704358 {
    pop $null;
    push 0;
    };
    pop $TEMPtfaae2af983704358;
    push 26;//[noinline]
    if $TEMPtfaae2af983704358 {
    pop;
    push 0;
    @returns.pop $state;};
    del $TEMPtfaae2af983704358;
    pop $state;
  };
  
  push $state; eq 26; if {
    push $threep0tf7d194d3bc3c0d63;
    add 5;
    pop $startIndexp0tf0419b3436249f85;
    push $inputp0t3c29bbf04fb849da;
    push $inputp1t31ad248129e326c7;
    push $startIndexp0tf0419b3436249f85;
    push 5;
    push 3;
    @returns.push 27;
    push 5;//[noinline]
    pop $state;
  };
  push $state; eq 27; if {
    pop $twop0tb2ba0337ea972b92;
    push $twop0tb2ba0337ea972b92;
    def $TEMPt255beb257fdd2b7;
    push 0;
    sub 1;
    pop $TEMPt255beb257fdd2b7;
    sub $TEMPt255beb257fdd2b7;
    pop $TEMPt255beb257fdd2b7;
    push 1;
    if $TEMPt255beb257fdd2b7 {
    pop $null;
    push 0;
    };
    pop $TEMPt255beb257fdd2b7;
    push 29;//[noinline]
    if $TEMPt255beb257fdd2b7 {
    pop;
    push 0;
    @returns.pop $state;};
    del $TEMPt255beb257fdd2b7;
    pop $state;
  };
  
  push $state; eq 29; if {
    push $twop0tb2ba0337ea972b92;
    add 3;
    pop $startIndexp0tf0419b3436249f85;
    push $inputp0t3c29bbf04fb849da;
    push $inputp1t31ad248129e326c7;
    push $startIndexp0tf0419b3436249f85;
    push 8;
    push 3;
    @returns.push 30;
    push 5;//[noinline]
    pop $state;
  };
  push $state; eq 30; if {
    pop $onep0tf7fd325a00c16566;
    push $onep0tf7fd325a00c16566;
    def $TEMPteadaded19ebf8cae;
    push 0;
    sub 1;
    pop $TEMPteadaded19ebf8cae;
    sub $TEMPteadaded19ebf8cae;
    pop $TEMPteadaded19ebf8cae;
    push 1;
    if $TEMPteadaded19ebf8cae {
    pop $null;
    push 0;
    };
    pop $TEMPteadaded19ebf8cae;
    push 32;//[noinline]
    if $TEMPteadaded19ebf8cae {
    pop;
    push 0;
    @returns.pop $state;};
    del $TEMPteadaded19ebf8cae;
    pop $state;
  };
  
  push $state; eq 32; if {
    push $onep0tf7fd325a00c16566;
    add 3;
    pop $startIndexp0tf0419b3436249f85;
    push $inputp0t3c29bbf04fb849da;
    push $inputp1t31ad248129e326c7;
    push $startIndexp0tf0419b3436249f85;
    push 11;
    push 2;
    @returns.push 33;
    push 5;//[noinline]
    pop $state;
  };
  push $state; eq 33; if {
    pop $gop0tee9872d327045077;
    push $gop0tee9872d327045077;
    def $TEMPt1660df12808d2e86;
    push 0;
    sub 1;
    pop $TEMPt1660df12808d2e86;
    sub $TEMPt1660df12808d2e86;
    pop $TEMPt1660df12808d2e86;
    push 1;
    if $TEMPt1660df12808d2e86 {
    pop $null;
    push 0;
    };
    pop $TEMPt1660df12808d2e86;
    push 35;//[noinline]
    if $TEMPt1660df12808d2e86 {
    pop;
    push 0;
    @returns.pop $state;};
    del $TEMPt1660df12808d2e86;
    pop $state;
  };
  
  push $state; eq 35; if {
    push $gop0tee9872d327045077;
    add 1;
    def $ip0t2d40cb19580b1e6;
    pop $ip0t2d40cb19580b1e6;
    print $ip0t2d40cb19580b1e6;
    flush;
    del $ip0t2d40cb19580b1e6;
    push 0;
    @returns.pop $state;
  };
  push $state; eq 36; if {
    push $inputp0t93611b5156c828;
    def $TEMPt6d0a6e84c0f91d70;
    sub 96;
    pop $TEMPt6d0a6e84c0f91d70;
    if $TEMPt6d0a6e84c0f91d70 {
    def @TEMPte15ad0ca87460132;
    @TEMPte15ad0ca87460132.push 0;
    @TEMPte15ad0ca87460132.sub 1;
    @TEMPte15ad0ca87460132.push 1;
    @TEMPte15ad0ca87460132.rot $TEMPt6d0a6e84c0f91d70;
    @TEMPte15ad0ca87460132.pop $null;
    @TEMPte15ad0ca87460132.pop $TEMPt6d0a6e84c0f91d70;
    undef @TEMPte15ad0ca87460132;
    };
    push $TEMPt6d0a6e84c0f91d70;
    del $TEMPt6d0a6e84c0f91d70;
    sub 1;
    def $TEMPt89af7c4b1f45caa5;
    pop $TEMPt89af7c4b1f45caa5;
    push 1;
    if $TEMPt89af7c4b1f45caa5 {
    pop $null;
    push 0;
    };
    pop $TEMPt89af7c4b1f45caa5;
    push 38;//[noinline]
    if $TEMPt89af7c4b1f45caa5 {
    pop;
    push $inputp0t93611b5156c828;
    sub 32;
    pop $inputp0t93611b5156c828;
    @heap.push $inputp0t93611b5156c828;
    inc $heapSize;
    push $arrp0tb52c3805864d5855;
    push $arrp1t4f73ef209a3b86b7;
    add 1;
    pop $arrp1t4f73ef209a3b86b7;
    pop $arrp0tb52c3805864d5855;
    push 20;//[inline]
   };
    del $TEMPt89af7c4b1f45caa5;
    pop $state;
  };
};